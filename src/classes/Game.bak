import {
    Color4,
    DynamicTexture,
    Engine,
    FreeCamera,
    HemisphericLight,
    Mesh,
    MeshBuilder,
    Scene,
    StandardMaterial,
    Texture,
    Vector3,
    VertexBuffer,
    VertexData,
    WebXRExperienceHelper,
    WebXRState,
} from 'babylonjs';
import {audio} from '../lib/audio';
// import {objectState, RADDEG, TinyWebXR} from '../lib/TinyWebXR';
import ttt from '../lib/ttt';
import {Vec3} from '../lib/Vec3';

// TODO: Remove before release! ðŸ˜¬
new EventSource('/esbuild').addEventListener('change', () => location.reload());

export class Game {
    textures: HTMLCanvasElement[] = [];
    tData: string[] = [];
    // ghosts: objectState[] = [];
    shootAudio?: AudioBuffer;
    eng: Engine;
    sce!: Scene;
    camera!: FreeCamera;
    floorData: {vertices: number[]; uv: number[]};

    constructor() {
        const cs = ttt(
            //[[32,32,13119,1,0,-16,4,32,6,32,41784,24856,33316,2,24852,3,2,4100,1],[32,32,95,2,244,1],[32,32,13119,1,-9,-16,6,3,8,8,65521,1,34143,1,-12,-12,6,3,8,8,65521,1,38239,2,13110,1],[32,32,21279,0,4,4,24,24,4,65524,17183,1,0,0,1,6,3,6,65521,1,52417,2,12810,1],[32,32,13119,4,2,0,0,32,32,15,1,4,4,17,16,32,32,65528,8,30591,3,5,16,65535,0,12,"13"]]
            // prettier-ignore
            [[32,32,43103,3,3,16,25647,0,22,"<>",3,0,31,25647,0,22,"> <",2,16918,1],[32,32,47759,0,-1,1,34,6,56504,8,34671,2,34356,1],[32,32,16671,2,43076,2,2,16671,4,0,0,0,8,32,0,0,16671],[32,32,15,2,61448,1,2,1272,1,2,7944,1,1,3,15,4,11,11,18,65528,8,30040,0,0,0,32,4,0,0,15,0,1,1,30,2,33551,12559,65535],[32,32,12559,0,5,5,22,22,7,65522,12559,2,4104,1],[32,32,0,3,-2,26,65535,0,26,"ðŸ‘»"],[32,32,13119,0,1,1,14,14,48072,13128,26239,0,17,1,14,14,63368,24600,45631,0,1,17,14,14,32440,5176,14447,0,17,17,14,14,48632,1144,1999,2,8,1]]
        ).map((x: HTMLCanvasElement, i: number) => {
            x.id = 't' + i;
            this.tData.push(x.toDataURL());
            this.textures.push(x);
            return x;
        });

        // Draw each texture onto the atlas canvas in the 4x4 grid
        // Create the main canvas
        const atlasCanvas = document.createElement('canvas');
        atlasCanvas.width = 128;
        atlasCanvas.height = 128;
        const atlasContext = atlasCanvas.getContext('2d')!;
        cs.forEach((texture, index) => {
            const x = (index % 4) * 32;
            const y = Math.floor(index / 4) * 32;
            atlasContext.drawImage(texture, x, y, 32, 32);
        });
        document.body.appendChild(atlasCanvas);

        // this.WebXR = new TinyWebXR();

        //  this.WebXR.createGroup({n: 'G', ry: 0});
        document.body.appendChild(this.textures[0]);
        document.body.appendChild(this.textures[1]);
        document.body.appendChild(this.textures[2]);
        document.body.appendChild(this.textures[3]);
        document.body.appendChild(this.textures[4]);
        document.body.appendChild(this.textures[5]);
        document.body.appendChild(this.textures[6]);
        // prettier-ignore
        this.floorData = {vertices: [-0.25,0,0,0.25,0,0,0.25,0,-1,-0.25,0,0,0.25,0,-1,-0.25,0,-1,-0.25,0,1,0.25,0,1,0.25,0,0,-0.25,0,1,0.25,0,0,-0.25,0,0,-1.25,0,1,-0.25,0,1,-0.25,0,0,-1.25,0,1,-0.25,0,0,-1.25,0,0,-1.25,0,0,-0.25,0,0,-0.25,0,-1,-1.25,0,0,-0.25,0,-1,-1.25,0,-1,0.25,0,0,0.25,0,1,1.25,0,1,0.25,0,0,1.25,0,1,1.25,0,0,0.25,0,-1,0.25,0,0,1.25,0,0,0.25,0,-1,1.25,0,0,1.25,0,-1], uv: [0.476562,0.5,0.976562,0.5,0.976562,-0.5,0.476562,0.5,0.976562,-0.5,0.476562,-0.5,0.476562,1.5,0.976562,1.5,0.976562,0.5,0.476562,1.5,0.976562,0.5,0.476562,0.5,0,-0.5,1,-0.5,1,0.5,0,-0.5,1,0.5,0,0.5,0,0.5,1,0.5,1,1.5,0,0.5,1,1.5,0,1.5,1,0.5,1,-0.5,0,-0.5,1,0.5,0,-0.5,0,0.5,1,1.5,1,0.5,0,0.5,1,1.5,0,0.5,0,1.5]};

        this.eng = new Engine(document.querySelector('#c') as HTMLCanvasElement, true);

        this.createScene()
            .then(() => {
                this.eng.runRenderLoop(() => {
                    let dt = this.eng.getDeltaTime();
                    // secs.match(ControllerInput).map(e => this.inputS.controllers(e, dt));
                    // switch (this.state) {
                    //     case 2:
                    //         secs.match(AIController).map(e => e.get(AIController).update(dt, e));
                    //         break;
                    //     case 1:
                    //         break;
                    //     case 3:
                    //         break;
                    // }
                    this.sce.render();
                });
            })
            .catch(console.error);

        // this.WebXR.add('wall', {
        //     vertices: [2, 3, 0, -2, 3, 0, -2, 0, 0, 2, 3, 0, -2, 0, 0, 2, 0, 0],
        //     uv: [4, 3, 0, 3, 0, 0, 4, 3, 0, 0, 4, 0],
        // });

        // this.WebXR.add('Floor', {vertices: [-0.378842,0,2.664209,-0.378842,0,-3.759968,2.076376,0,-3.759968,-0.378842,0,2.664209,2.076376,0,-3.759968,2.076376,0,2.664209,-2.028787,0,2.664209,-2.028787,0,-3.759968,-0.925019,0,-3.759968,-2.028787,0,2.664209,-0.925019,0,-3.759968,-0.925019,0,2.664209,-0.925019,0,2.664209,-0.925019,0,-3.759968,-0.378842,0,-3.759968,-0.925019,0,2.664209,-0.378842,0,-3.759968,-0.378842,0,2.664209,2.076376,0,2.664209,2.076376,0,3.713237,-0.378842,0,3.713237,2.076376,0,2.664209,-0.378842,0,3.713237,-0.378842,0,2.664209,-0.378842,2.5,2.664209,2.076376,2.5,2.664209,2.076376,2.5,-3.759968,-0.378842,2.5,2.664209,2.076376,2.5,-3.759968,-0.378842,2.5,-3.759968,-2.028787,2.5,2.664209,-0.925019,2.5,2.664209,-0.925019,2.5,-3.759968,-2.028787,2.5,2.664209,-0.925019,2.5,-3.759968,-2.028787,2.5,-3.759968,-0.925019,2.5,2.664209,-0.378842,2.5,2.664209,-0.378842,2.5,-3.759968,-0.925019,2.5,2.664209,-0.378842,2.5,-3.759968,-0.925019,2.5,-3.759968,2.076376,2.5,2.664209,-0.378842,2.5,2.664209,-0.378842,2.5,3.713237,2.076376,2.5,2.664209,-0.378842,2.5,3.713237,2.076376,2.5,3.713237,-1.921296,0,2.664209,-1.03251,0,2.664209,-1.03251,0,2.791433,-1.921296,0,2.664209,-1.03251,0,2.791433,-1.921296,0,2.791433], uv: [0.40545,-1.298033,0.40545,5.126144,2.860668,5.126144,0.40545,-1.298033,2.860668,5.126144,2.860668,-1.298033,-1.244495,-1.298033,-1.244495,5.126144,-0.140727,5.126144,-1.244495,-1.298033,-0.140727,5.126144,-0.140727,-1.298033,-0.140727,-1.298033,-0.140727,5.126144,0.40545,5.126144,-0.140727,-1.298033,0.40545,5.126144,0.40545,-1.298033,2.860668,-1.298033,2.860668,-2.34706,0.40545,-2.34706,2.860668,-1.298033,0.40545,-2.34706,0.40545,-1.298033,0.40545,-1.298033,2.860668,-1.298033,2.860668,5.126144,0.40545,-1.298033,2.860668,5.126144,0.40545,5.126144,-1.244495,-1.298033,-0.140727,-1.298033,-0.140727,5.126144,-1.244495,-1.298033,-0.140727,5.126144,-1.244495,5.126144,-0.140727,-1.298033,0.40545,-1.298033,0.40545,5.126144,-0.140727,-1.298033,0.40545,5.126144,-0.140727,5.126144,2.860668,-1.298033,0.40545,-1.298033,0.40545,-2.34706,2.860668,-1.298033,0.40545,-2.34706,2.860668,-2.34706,-1.137004,-1.298033,-0.248218,-1.298033,-0.248218,-1.425256,-1.137004,-1.298033,-0.248218,-1.425256,-1.137004,-1.425256]});
        // this.WebXR.add('Walls1', {vertices: [-1.921296,2.285018,2.664209,-1.921296,0,2.664209,-1.921296,0,2.791433,-1.921296,2.285018,2.664209,-1.921296,0,2.791433,-1.921296,2.285018,2.791433,2.076376,0,3.713237,2.076376,0,2.664209,2.076376,2.5,2.664209,2.076376,0,3.713237,2.076376,2.5,2.664209,2.076376,2.5,3.713237,-0.925019,0,2.664209,-0.378842,0,2.664209,-0.378842,2.5,2.664209,-0.925019,0,2.664209,-0.378842,2.5,2.664209,-0.925019,2.5,2.664209,-0.378842,0,2.664209,-0.378842,0,3.713237,-0.378842,2.5,3.713237,-0.378842,0,2.664209,-0.378842,2.5,3.713237,-0.378842,2.5,2.664209,2.076376,0,2.664209,2.076376,0,-3.759968,2.076376,2.5,-3.759968,2.076376,0,2.664209,2.076376,2.5,-3.759968,2.076376,2.5,2.664209,-0.378842,0,3.713237,2.076376,0,3.713237,2.076376,2.5,3.713237,-0.378842,0,3.713237,2.076376,2.5,3.713237,-0.378842,2.5,3.713237,-2.028787,0,-3.759968,-2.028787,0,2.664209,-2.028787,2.5,2.664209,-2.028787,0,-3.759968,-2.028787,2.5,2.664209,-2.028787,2.5,-3.759968,1.054513,0,1.183601,1.054513,2.5,1.183601,2.076376,2.5,1.183601,1.054513,0,1.183601,2.076376,2.5,1.183601,2.076376,0,1.183601,1.054513,0,1.065467,2.076376,0,1.065467,2.076376,2.5,1.065467,1.054513,0,1.065467,2.076376,2.5,1.065467,1.054513,2.5,1.065467,1.054513,2.5,1.183601,1.054513,0,1.183601,1.054513,0,1.065467,1.054513,2.5,1.183601,1.054513,0,1.065467,1.054513,2.5,1.065467,2.076376,2.5,1.183601,1.054513,2.5,1.183601,1.054513,2.5,1.065467,2.076376,2.5,1.183601,1.054513,2.5,1.065467,2.076376,2.5,1.065467,2.076376,0,1.183601,2.076376,2.5,1.183601,2.076376,2.5,1.065467,2.076376,0,1.183601,2.076376,2.5,1.065467,2.076376,0,1.065467,1.054513,0,1.183601,2.076376,0,1.183601,2.076376,0,1.065467,1.054513,0,1.183601,2.076376,0,1.065467,1.054513,0,1.065467,-0.922257,0,1.183601,-0.922257,2.5,1.183601,0.054513,2.5,1.183601,-0.922257,0,1.183601,0.054513,2.5,1.183601,0.054513,0,1.183601,-0.922257,0,1.065467,0.054513,0,1.065467,0.054513,2.5,1.065467,-0.922257,0,1.065467,0.054513,2.5,1.065467,-0.922257,2.5,1.065467,-0.922257,2.5,1.183601,-0.922257,0,1.183601,-0.922257,0,1.065467,-0.922257,2.5,1.183601,-0.922257,0,1.065467,-0.922257,2.5,1.065467,0.054513,2.5,1.183601,-0.922257,2.5,1.183601,-0.922257,2.5,1.065467,0.054513,2.5,1.183601,-0.922257,2.5,1.065467,0.054513,2.5,1.065467,0.054513,0,1.183601,0.054513,2.5,1.183601,0.054513,2.5,1.065467,0.054513,0,1.183601,0.054513,2.5,1.065467,0.054513,0,1.065467,-0.922257,0,1.183601,0.054513,0,1.183601,0.054513,0,1.065467,-0.922257,0,1.183601,0.054513,0,1.065467,-0.922257,0,1.065467,-0.804123,0,2.664209,-0.804123,2.5,2.664209,-0.804123,2.5,1.183601,-0.804123,0,2.664209,-0.804123,2.5,1.183601,-0.804123,0,1.183601,-0.922257,0,2.664209,-0.922257,0,1.183601,-0.922257,2.5,1.183601,-0.922257,0,2.664209,-0.922257,2.5,1.183601,-0.922257,2.5,2.664209,-0.804123,2.5,2.664209,-0.804123,0,2.664209,-0.922257,0,2.664209,-0.804123,2.5,2.664209,-0.922257,0,2.664209,-0.922257,2.5,2.664209,-0.804123,2.5,1.183601,-0.804123,2.5,2.664209,-0.922257,2.5,2.664209,-0.804123,2.5,1.183601,-0.922257,2.5,2.664209,-0.922257,2.5,1.183601,-0.804123,0,1.183601,-0.804123,2.5,1.183601,-0.922257,2.5,1.183601,-0.804123,0,1.183601,-0.922257,2.5,1.183601,-0.922257,0,1.183601,-0.804123,0,2.664209,-0.804123,0,1.183601,-0.922257,0,1.183601,-0.804123,0,2.664209,-0.922257,0,1.183601,-0.922257,0,2.664209,-1.921296,2.285018,2.664209,-1.03251,2.285018,2.664209,-0.925019,2.5,2.664209,-1.921296,2.285018,2.664209,-0.925019,2.5,2.664209,-2.028787,2.5,2.664209,-1.03251,2.285018,2.664209,-1.03251,0,2.664209,-0.925019,0,2.664209,-1.03251,2.285018,2.664209,-0.925019,0,2.664209,-0.925019,2.5,2.664209,-1.921296,0,2.664209,-1.921296,2.285018,2.664209,-2.028787,2.5,2.664209,-1.921296,0,2.664209,-2.028787,2.5,2.664209,-2.028787,0,2.664209,-1.03251,2.285018,2.664209,-1.921296,2.285018,2.664209,-1.921296,2.285018,2.791433,-1.03251,2.285018,2.664209,-1.921296,2.285018,2.791433,-1.03251,2.285018,2.791433,-1.03251,0,2.664209,-1.03251,2.285018,2.664209,-1.03251,2.285018,2.791433,-1.03251,0,2.664209,-1.03251,2.285018,2.791433,-1.03251,0,2.791433], uv: [-1.298033,1.647313,-1.298033,-0.637705,-1.425256,-0.637705,-1.298033,1.647313,-1.425256,-0.637705,-1.425256,1.647313,-2.34706,-0.637705,-1.298033,-0.637705,-1.298033,1.862295,-2.34706,-0.637705,-1.298033,1.862295,-2.34706,1.862295,-0.140727,-0.637705,0.40545,-0.637705,0.40545,1.862295,-0.140727,-0.637705,0.40545,1.862295,-0.140727,1.862295,-1.298033,-0.637705,-2.34706,-0.637705,-2.34706,1.862295,-1.298033,-0.637705,-2.34706,1.862295,-1.298033,1.862295,-1.298033,-0.637705,5.126144,-0.637705,5.126144,1.862295,-1.298033,-0.637705,5.126144,1.862295,-1.298033,1.862295,0.40545,-0.637705,2.860668,-0.637705,2.860668,1.862295,0.40545,-0.637705,2.860668,1.862295,0.40545,1.862295,5.126144,-0.637705,-1.298033,-0.637705,-1.298033,1.862295,5.126144,-0.637705,-1.298033,1.862295,5.126144,1.862295,1.838805,-0.637705,1.838805,1.862295,2.860668,1.862295,1.838805,-0.637705,2.860668,1.862295,2.860668,-0.637705,1.838805,-0.637705,2.860668,-0.637705,2.860668,1.862295,1.838805,-0.637705,2.860668,1.862295,1.838805,1.862295,0.182576,1.862295,0.182576,-0.637705,0.300709,-0.637705,0.182576,1.862295,0.300709,-0.637705,0.300709,1.862295,2.860668,0.182576,1.838805,0.182576,1.838805,0.300709,2.860668,0.182576,1.838805,0.300709,2.860668,0.300709,0.182576,-0.637705,0.182576,1.862295,0.300709,1.862295,0.182576,-0.637705,0.300709,1.862295,0.300709,-0.637705,1.838805,0.182576,2.860668,0.182576,2.860668,0.300709,1.838805,0.182576,2.860668,0.300709,1.838805,0.300709,-0.137965,-0.637705,-0.137965,1.862295,0.838805,1.862295,-0.137965,-0.637705,0.838805,1.862295,0.838805,-0.637705,-0.137965,-0.637705,0.838805,-0.637705,0.838805,1.862295,-0.137965,-0.637705,0.838805,1.862295,-0.137965,1.862295,0.182576,1.862295,0.182576,-0.637705,0.300709,-0.637705,0.182576,1.862295,0.300709,-0.637705,0.300709,1.862295,0.838805,0.182576,-0.137965,0.182576,-0.137965,0.300709,0.838805,0.182576,-0.137965,0.300709,0.838805,0.300709,0.182576,-0.637705,0.182576,1.862295,0.300709,1.862295,0.182576,-0.637705,0.300709,1.862295,0.300709,-0.637705,-0.137965,0.182576,0.838805,0.182576,0.838805,0.300709,-0.137965,0.182576,0.838805,0.300709,-0.137965,0.300709,-1.298033,-0.637705,-1.298033,1.862295,0.182576,1.862295,-1.298033,-0.637705,0.182576,1.862295,0.182576,-0.637705,-1.298033,-0.637705,0.182576,-0.637705,0.182576,1.862295,-1.298033,-0.637705,0.182576,1.862295,-1.298033,1.862295,-0.019831,1.862295,-0.019831,-0.637705,-0.137965,-0.637705,-0.019831,1.862295,-0.137965,-0.637705,-0.137965,1.862295,-0.019831,0.182576,-0.019831,-1.298033,-0.137965,-1.298033,-0.019831,0.182576,-0.137965,-1.298033,-0.137965,0.182576,-0.019831,-0.637705,-0.019831,1.862295,-0.137965,1.862295,-0.019831,-0.637705,-0.137965,1.862295,-0.137965,-0.637705,-0.019831,-1.298033,-0.019831,0.182576,-0.137965,0.182576,-0.019831,-1.298033,-0.137965,0.182576,-0.137965,-1.298033,-1.137004,1.647313,-0.248218,1.647313,-0.140727,1.862295,-1.137004,1.647313,-0.140727,1.862295,-1.244495,1.862295,-0.248218,1.647313,-0.248218,-0.637705,-0.140727,-0.637705,-0.248218,1.647313,-0.140727,-0.637705,-0.140727,1.862295,-1.137004,-0.637705,-1.137004,1.647313,-1.244495,1.862295,-1.137004,-0.637705,-1.244495,1.862295,-1.244495,-0.637705,-0.248218,-1.298033,-1.137004,-1.298033,-1.137004,-1.425256,-0.248218,-1.298033,-1.137004,-1.425256,-0.248218,-1.425256,-1.298033,-0.637705,-1.298033,1.647313,-1.425256,1.647313,-1.298033,-0.637705,-1.425256,1.647313,-1.425256,-0.637705]});
        // this.WebXR.add('Walls2', {vertices: [2.076376,0,-3.759968,-0.378842,0,-3.759968,-0.378842,2.5,-3.759968,2.076376,0,-3.759968,-0.378842,2.5,-3.759968,2.076376,2.5,-3.759968,-0.925019,0,-3.759968,-2.028787,0,-3.759968,-2.028787,2.5,-3.759968,-0.925019,0,-3.759968,-2.028787,2.5,-3.759968,-0.925019,2.5,-3.759968,-0.378842,0,-3.759968,-0.925019,0,-3.759968,-0.925019,2.5,-3.759968,-0.378842,0,-3.759968,-0.925019,2.5,-3.759968,-0.378842,2.5,-3.759968], uv: [2.860668,-0.637705,0.40545,-0.637705,0.40545,1.862295,2.860668,-0.637705,0.40545,1.862295,2.860668,1.862295,-0.140727,-0.637705,-1.244495,-0.637705,-1.244495,1.862295,-0.140727,-0.637705,-1.244495,1.862295,-0.140727,1.862295,0.40545,-0.637705,-0.140727,-0.637705,-0.140727,1.862295,0.40545,-0.637705,-0.140727,1.862295,0.40545,1.862295]});
        // this.WebXR.add('Bed', {vertices: [-1.851575,0,-0.234056,-1.851575,0.5,-0.234056,0.676684,0.5,-0.234056,-1.851575,0,-0.234056,0.676684,0.5,-0.234056,0.676684,0,-0.234056,-1.851575,0,-2.352587,0.676684,0,-2.352587,0.676684,0.5,-2.352587,-1.851575,0,-2.352587,0.676684,0.5,-2.352587,-1.851575,0.5,-2.352587,-1.851575,0.5,-0.234056,-1.851575,0,-0.234056,-1.851575,0,-2.352587,-1.851575,0.5,-0.234056,-1.851575,0,-2.352587,-1.851575,0.5,-2.352587,0.676684,0.5,-0.234056,-1.851575,0.5,-0.234056,-1.851575,0.5,-2.352587,0.676684,0.5,-0.234056,-1.851575,0.5,-2.352587,0.676684,0.5,-2.352587,0.676684,0,-0.234056,0.676684,0.5,-0.234056,0.676684,0.5,-2.352587,0.676684,0,-0.234056,0.676684,0.5,-2.352587,0.676684,0,-2.352587,-1.851575,0,-0.234056,0.676684,0,-0.234056,0.676684,0,-2.352587,-1.851575,0,-0.234056,0.676684,0,-2.352587,-1.851575,0,-2.352587], uv: [-1.067283,-0.637705,-1.067283,-0.137705,1.460976,-0.137705,-1.067283,-0.637705,1.460976,-0.137705,1.460976,-0.637705,-1.067283,-0.637705,1.460976,-0.637705,1.460976,-0.137705,-1.067283,-0.637705,1.460976,-0.137705,-1.067283,-0.137705,1.600233,-0.137705,1.600233,-0.637705,3.718764,-0.637705,1.600233,-0.137705,3.718764,-0.637705,3.718764,-0.137705,1.460976,1.600233,-1.067283,1.600233,-1.067283,3.718764,1.460976,1.600233,-1.067283,3.718764,1.460976,3.718764,1.600233,-0.637705,1.600233,-0.137705,3.718764,-0.137705,1.600233,-0.637705,3.718764,-0.137705,3.718764,-0.637705,-1.067283,1.600233,1.460976,1.600233,1.460976,3.718764,-1.067283,1.600233,1.460976,3.718764,-1.067283,3.718764]});
        // this.WebXR.add('Door', {vertices: [-1.921296,0,2.791433,-1.03251,0,2.791433,-1.03251,2.285018,2.791433,-1.921296,0,2.791433,-1.03251,2.285018,2.791433,-1.921296,2.285018,2.791433], uv: [-1.137004,-0.637705,-0.248218,-0.637705,-0.248218,1.647313,-1.137004,-0.637705,-0.248218,1.647313,-1.137004,1.647313]});

        // this.WebXR.instance({t: this.textures[0]}, 'Walls2');
        // this.WebXR.instance({t: this.textures[1]}, 'Walls1');
        // this.WebXR.instance({t: this.textures[2]}, 'Floor');
        // this.WebXR.instance({t: this.textures[0]}, 'Door');
        // this.bed = this.WebXR.instance({n:'Bed', b:"EEE"}, 'Bed');

        //     this.WebXR.add('Floor',
        //     // prettier-ignore
        //     this.WebXR.add('WallLow', {vertices: [1.25,1,1,1.25,1,-1,1.25,0,-1,1.25,1,1,1.25,0,-1,1.25,0,1,-1.25,1,-1,-1.25,1,1,-1.25,0,1,-1.25,1,-1,-1.25,0,1,-1.25,0,-1], uv: [-0.5,0.886719,1.5,0.886719,1.5,-0.113281,-0.5,0.886719,1.5,-0.113281,-0.5,-0.113281,1.5,0.886719,-0.5,0.886719,-0.5,-0.113281,1.5,0.886719,-0.5,-0.113281,1.5,-0.113281]});
        //     // prettier-ignore
        //     this.WebXR.add('WallTop', {vertices: [-1.25,2.5,1,-1.25,1,1,-1.25,1,-1,-1.25,2.5,1,-1.25,1,-1,-1.25,2.5,-1,1.25,2.5,-1,1.25,1,-1,1.25,1,1,1.25,2.5,-1,1.25,1,1,1.25,2.5,1], uv: [-0.5,1.25,-0.5,-0.25,1.5,-0.25,-0.5,1.25,1.5,-0.25,1.5,1.25,-0.5,1.25,-0.5,-0.25,1.5,-0.25,-0.5,1.25,1.5,-0.25,1.5,1.25]});
        //     // prettier-ignore
        //     this.WebXR.add('Ceiling', {vertices: [0.75,2.5,1,0.75,2.5,-1,1.25,2.5,-1,0.75,2.5,1,1.25,2.5,-1,1.25,2.5,1,-1.25,2.5,1,-1.25,2.5,-1,-0.75,2.5,-1,-1.25,2.5,1,-0.75,2.5,-1,-0.75,2.5,1,0.75,2.5,-1,0.75,2.5,1,0.75,2.65,1,0.75,2.5,-1,0.75,2.65,1,0.75,2.65,-1,-0.75,2.65,1,-0.75,2.65,-1,0.75,2.65,-1,-0.75,2.65,1,0.75,2.65,-1,0.75,2.65,1,-0.75,2.5,1,-0.75,2.5,-1,-0.75,2.65,-1,-0.75,2.5,1,-0.75,2.65,-1,-0.75,2.65,1], uv: [-0.5,1.25,1.5,1.25,1.5,1.25,-0.5,1.25,1.5,1.25,-0.5,1.25,-0.5,1.25,1.5,1.25,1.5,1.25,-0.5,1.25,1.5,1.25,-0.5,1.25,1.5,1.25,-0.5,1.25,-0.5,1.25,1.5,1.25,-0.5,1.25,1.5,1.25,-0.5,1.25,1.5,1.25,1.5,1.25,-0.5,1.25,1.5,1.25,-0.5,1.25,-0.5,1.25,1.5,1.25,1.5,1.25,-0.5,1.25,1.5,1.25,-0.5,1.25]});
        //     // prettier-ignore
        //     this.WebXR.add('Gun', {vertices: [0,-0.05,-0.02,0.01,-0.02,0.04,0.01,-0.06,0.02,0,-0.05,-0.02,0.01,-0.06,0.02,0,-0.08,-0.01,0.01,0.01,-0.04,0.01,0.05,-0.05,0.01,0.05,0.02,0.01,0.01,-0.04,0.01,0.05,0.02,0.01,0.02,0.01,-0.02,0.01,-0.04,-0.02,0.05,-0.05,0.01,0.05,-0.05,-0.02,0.01,-0.04,0.01,0.05,-0.05,0.01,0.01,-0.04,-0.01,-0.05,-0.02,-0.02,0.01,-0.04,0.01,0.01,-0.04,-0.01,-0.05,-0.02,0.01,0.01,-0.04,0,-0.05,-0.02,0,-0.05,-0.02,0.01,0.01,-0.04,0.01,0.02,0.01,0,-0.05,-0.02,0.01,0.02,0.01,0.01,-0.02,0.04,0.01,-0.02,0.04,0.01,0.02,0.01,-0.02,0.02,0.01,0.01,-0.02,0.04,-0.02,0.02,0.01,-0.02,-0.02,0.04,0.01,0.02,0.01,0.01,0.05,0.02,-0.02,0.05,0.02,0.01,0.02,0.01,-0.02,0.05,0.02,-0.02,0.02,0.01,0.02,0.07,-0.05,0.01,0.05,-0.05,0.02,0.05,-0.07,0.02,0.07,-0.05,0.02,0.05,-0.07,0.02,0.07,-0.07,-0.01,-0.08,-0.01,0,-0.08,-0.01,0.01,-0.06,0.02,-0.01,-0.08,-0.01,0.01,-0.06,0.02,-0.02,-0.06,0.02,-0.02,-0.02,0.04,-0.01,-0.05,-0.02,-0.01,-0.08,-0.01,-0.02,-0.02,0.04,-0.01,-0.08,-0.01,-0.02,-0.06,0.02,0.01,-0.02,0.04,-0.02,-0.02,0.04,-0.02,-0.06,0.02,0.01,-0.02,0.04,-0.02,-0.06,0.02,0.01,-0.06,0.02,-0.01,-0.08,-0.01,-0.01,-0.05,-0.02,-0.01,-0.07,-0.07,-0.01,-0.08,-0.01,-0.01,-0.07,-0.07,-0.01,-0.09,-0.08,-0.01,-0.07,-0.07,0,-0.07,-0.07,0,-0.04,-0.11,-0.01,-0.07,-0.07,0,-0.04,-0.11,-0.01,-0.04,-0.11,-0.01,-0.05,-0.02,0,-0.05,-0.02,0,-0.07,-0.07,-0.01,-0.05,-0.02,0,-0.07,-0.07,-0.01,-0.07,-0.07,0,-0.08,-0.01,-0.01,-0.08,-0.01,-0.01,-0.09,-0.08,0,-0.08,-0.01,-0.01,-0.09,-0.08,0,-0.09,-0.08,0,-0.05,-0.02,0,-0.08,-0.01,0,-0.09,-0.08,0,-0.05,-0.02,0,-0.09,-0.08,0,-0.07,-0.07,-0.01,-0.09,-0.08,-0.01,-0.07,-0.07,-0.01,-0.04,-0.11,-0.01,-0.09,-0.08,-0.01,-0.04,-0.11,-0.01,-0.06,-0.13,0,-0.09,-0.08,-0.01,-0.09,-0.08,-0.01,-0.06,-0.13,0,-0.09,-0.08,-0.01,-0.06,-0.13,0,-0.06,-0.13,0,-0.07,-0.07,0,-0.09,-0.08,0,-0.06,-0.13,0,-0.07,-0.07,0,-0.06,-0.13,0,-0.04,-0.11,0.01,0.12,0.02,-0.02,0.12,0.02,-0.02,0.11,0.06,0.01,0.12,0.02,-0.02,0.11,0.06,0.01,0.11,0.06,0.01,0.05,0.02,0.01,0.05,-0.05,0.02,0.07,-0.05,0.01,0.05,0.02,0.02,0.07,-0.05,0.02,0.07,0.02,0.02,0.07,0.02,0.01,0.12,0.02,0.01,0.11,0.06,0.02,0.07,0.02,0.01,0.11,0.06,0.02,0.07,0.06,0.01,0.12,-0.05,-0.02,0.12,-0.05,-0.02,0.12,0.02,0.01,0.12,-0.05,-0.02,0.12,0.02,0.01,0.12,0.02,0.02,0.07,0.02,0.02,0.07,-0.05,0.01,0.12,-0.05,0.02,0.07,0.02,0.01,0.12,-0.05,0.01,0.12,0.02,-0.02,0.12,-0.05,0.01,0.12,-0.05,0.01,0.12,-0.07,-0.02,0.12,-0.05,0.01,0.12,-0.07,-0.02,0.12,-0.07,0.01,0.12,-0.07,0.02,0.07,-0.07,0.02,0.07,-0.12,0.01,0.12,-0.07,0.02,0.07,-0.12,0.01,0.12,-0.12,-0.02,0.12,-0.07,0.01,0.12,-0.07,0.01,0.12,-0.12,-0.02,0.12,-0.07,0.01,0.12,-0.12,-0.02,0.12,-0.12,0.01,0.12,-0.05,0.02,0.07,-0.05,0.02,0.07,-0.07,0.01,0.12,-0.05,0.02,0.07,-0.07,0.01,0.12,-0.07,0.01,0.05,-0.05,-0.02,0.05,-0.05,-0.03,0.05,-0.07,0.01,0.05,-0.05,-0.03,0.05,-0.07,0.02,0.05,-0.07,0.01,0.12,-0.12,0.02,0.07,-0.12,0.02,0.07,-0.21,0.01,0.12,-0.12,0.02,0.07,-0.21,0.01,0.12,-0.21,-0.02,0.12,-0.12,0.01,0.12,-0.12,0.01,0.12,-0.21,-0.02,0.12,-0.12,0.01,0.12,-0.21,-0.02,0.12,-0.21,0.02,0.07,-0.07,0.02,0.05,-0.07,0.02,0.05,-0.12,0.02,0.07,-0.07,0.02,0.05,-0.12,0.02,0.07,-0.12,0.02,0.03,-0.21,0.02,0.06,-0.19,0.03,0.06,-0.19,0.02,0.03,-0.21,0.03,0.06,-0.19,0.03,0.03,-0.21,0.02,0.05,-0.21,-0.03,0.05,-0.21,-0.03,0.07,-0.21,0.02,0.05,-0.21,-0.03,0.07,-0.21,0.02,0.07,-0.21,-0.02,0.12,-0.21,0.01,0.12,-0.21,0.01,0.1,-0.23,-0.02,0.12,-0.21,0.01,0.1,-0.23,-0.02,0.1,-0.23,0.02,0.03,-0.13,0.02,0,-0.14,0.03,0,-0.14,0.02,0.03,-0.13,0.03,0,-0.14,0.03,0.03,-0.13,0.02,0.05,-0.12,0.02,0.05,-0.07,0.02,0.01,-0.07,0.02,0.05,-0.12,0.02,0.01,-0.07,0,-0.01,-0.12,0.01,0.08,-0.23,-0.02,0.08,-0.23,-0.02,0.08,-0.3,0.01,0.08,-0.23,-0.02,0.08,-0.3,0.01,0.08,-0.3,0.01,0.12,-0.21,0.02,0.07,-0.21,0.01,0.08,-0.23,0.01,0.12,-0.21,0.01,0.08,-0.23,0.01,0.1,-0.23,0.02,0.07,-0.21,-0.03,0.07,-0.21,-0.02,0.08,-0.23,0.02,0.07,-0.21,-0.02,0.08,-0.23,0.01,0.08,-0.23,0.01,0.08,-0.3,-0.02,0.08,-0.3,-0.02,0.1,-0.3,0.01,0.08,-0.3,-0.02,0.1,-0.3,0.01,0.1,-0.3,0.01,0.1,-0.23,0.01,0.08,-0.23,0.01,0.08,-0.3,0.01,0.1,-0.23,0.01,0.08,-0.3,0.01,0.1,-0.3,-0.02,0.1,-0.23,0.01,0.1,-0.23,0.01,0.1,-0.3,-0.02,0.1,-0.23,0.01,0.1,-0.3,-0.02,0.1,-0.3,0.02,0.07,0.06,0.01,0.11,0.06,0.02,0.1,0.09,-0.01,0.05,0.04,0,0.05,0.04,0.02,0.07,0.06,-0.01,0.05,0.04,0.02,0.07,0.06,-0.03,0.07,0.06,0.01,0.05,0.02,0.02,0.07,0.02,0.02,0.07,0.06,0.01,0.05,0.02,0.02,0.07,0.06,0,0.05,0.04,-0.02,0.05,0.02,0.01,0.05,0.02,0,0.05,0.04,-0.02,0.05,0.02,0,0.05,0.04,-0.01,0.05,0.04,0.02,0.01,-0.07,-0.03,0.01,-0.07,-0.01,-0.01,-0.12,0.02,0.01,-0.07,-0.01,-0.01,-0.12,0,-0.01,-0.12,-0.03,0,-0.21,0.02,0,-0.21,0,-0.01,-0.15,-0.03,0,-0.21,0,-0.01,-0.15,-0.01,-0.01,-0.15,0.02,0.05,-0.07,-0.03,0.05,-0.07,-0.03,0.01,-0.07,0.02,0.05,-0.07,-0.03,0.01,-0.07,0.02,0.01,-0.07,-0.03,0.05,-0.21,0.02,0.05,-0.21,0.02,0,-0.21,-0.03,0.05,-0.21,0.02,0,-0.21,-0.03,0,-0.21,0.02,0,-0.21,0,-0.01,-0.12,0,-0.01,-0.15,-0.01,-0.06,-0.13,-0.01,-0.04,-0.11,-0.01,-0.02,-0.12,-0.01,-0.06,-0.13,-0.01,-0.02,-0.12,-0.01,-0.04,-0.14,0,-0.02,-0.12,0,-0.04,-0.14,0,-0.01,-0.15,0,-0.02,-0.12,0,-0.01,-0.15,0,-0.01,-0.12,0,-0.06,-0.13,-0.01,-0.06,-0.13,-0.01,-0.04,-0.14,0,-0.06,-0.13,-0.01,-0.04,-0.14,0,-0.04,-0.14,0,-0.04,-0.11,0,-0.06,-0.13,0,-0.04,-0.14,0,-0.04,-0.11,0,-0.04,-0.14,0,-0.02,-0.12,-0.01,-0.04,-0.11,0,-0.04,-0.11,0,-0.02,-0.12,-0.01,-0.04,-0.11,0,-0.02,-0.12,-0.01,-0.02,-0.12,0.01,0.11,0.06,-0.02,0.11,0.06,-0.03,0.12,0.06,0.01,0.11,0.06,-0.03,0.12,0.06,0.02,0.12,0.06,-0.03,0.07,0.06,0.02,0.07,0.06,0.02,0.1,0.09,-0.03,0.07,0.06,0.02,0.1,0.09,-0.03,0.1,0.09,0.02,0.12,0.09,0.02,0.12,0.06,0.01,0.15,0.08,0.02,0.1,0.09,0.01,0.11,0.06,0.02,0.12,0.06,0.02,0.1,0.09,0.02,0.12,0.06,0.02,0.12,0.09,-0.03,0.1,0.09,0.02,0.1,0.09,0.02,0.12,0.09,-0.03,0.1,0.09,0.02,0.12,0.09,-0.03,0.12,0.09,-0.02,0.15,0.08,0.01,0.15,0.08,0.01,0.16,0.05,-0.02,0.15,0.08,0.01,0.16,0.05,-0.02,0.16,0.05,0.02,0.12,0.06,-0.03,0.12,0.06,-0.03,0.12,-0.01,0.02,0.12,0.06,-0.03,0.12,-0.01,0.02,0.12,-0.01,-0.03,0.12,0.09,0.02,0.12,0.09,0.01,0.15,0.08,-0.03,0.12,0.09,0.01,0.15,0.08,-0.02,0.15,0.08,0.01,0.15,0.08,0.02,0.12,0.06,0.01,0.16,0.05,0.01,0.16,-0.01,0.02,0.12,-0.01,0.01,0.13,-0.01,0.01,0.16,-0.01,0.01,0.13,-0.01,0.01,0.15,-0.01,-0.02,0.16,0.05,0.01,0.16,0.05,0.01,0.16,-0.01,-0.02,0.16,0.05,0.01,0.16,-0.01,-0.02,0.16,-0.01,0.01,0.16,0.05,0.02,0.12,0.06,0.02,0.12,-0.01,0.01,0.16,0.05,0.02,0.12,-0.01,0.01,0.16,-0.01,-0.02,0.15,-0.01,0.01,0.15,-0.01,0.01,0.15,-0.09,-0.02,0.15,-0.01,0.01,0.15,-0.09,-0.02,0.15,-0.09,-0.02,0.16,-0.01,0.01,0.16,-0.01,0.01,0.15,-0.01,-0.02,0.16,-0.01,0.01,0.15,-0.01,-0.02,0.15,-0.01,0.02,0.12,-0.01,-0.03,0.12,-0.01,-0.02,0.13,-0.01,0.02,0.12,-0.01,-0.02,0.13,-0.01,0.01,0.13,-0.01,-0.02,0.15,-0.09,0.01,0.15,-0.09,0.01,0.14,-0.09,-0.02,0.15,-0.09,0.01,0.14,-0.09,-0.02,0.14,-0.09,0.01,0.15,-0.01,0.01,0.13,-0.01,0.01,0.14,-0.09,0.01,0.15,-0.01,0.01,0.14,-0.09,0.01,0.15,-0.09,0.01,0.13,-0.01,-0.02,0.13,-0.01,-0.02,0.14,-0.09,0.01,0.13,-0.01,-0.02,0.14,-0.09,0.01,0.14,-0.09,-0.01,-0.02,-0.12,0,-0.02,-0.12,0,-0.01,-0.12,-0.01,-0.02,-0.12,0,-0.01,-0.12,-0.01,-0.01,-0.12,-0.01,-0.04,-0.14,-0.01,-0.02,-0.12,-0.01,-0.01,-0.12,-0.01,-0.04,-0.14,-0.01,-0.01,-0.12,-0.01,-0.01,-0.15,0,-0.04,-0.14,-0.01,-0.04,-0.14,-0.01,-0.01,-0.15,0,-0.04,-0.14,-0.01,-0.01,-0.15,0,-0.01,-0.15,0.02,0.06,-0.14,0.02,0.06,-0.19,0.02,0.07,-0.21,0.02,0.06,-0.14,0.02,0.07,-0.21,0.02,0.07,-0.12,0.02,0.03,-0.13,0.02,0.06,-0.14,0.02,0.07,-0.12,0.02,0.03,-0.13,0.02,0.07,-0.12,0.02,0.05,-0.12,0.02,0.06,-0.19,0.02,0.03,-0.21,0.02,0.05,-0.21,0.02,0.06,-0.19,0.02,0.05,-0.21,0.02,0.07,-0.21,0.02,0,-0.19,0.02,0,-0.14,0,-0.01,-0.12,0.02,0,-0.19,0,-0.01,-0.12,0.02,0,-0.21,0.02,0,-0.14,0.02,0.03,-0.13,0.02,0.05,-0.12,0.02,0,-0.14,0.02,0.05,-0.12,0,-0.01,-0.12,0.02,0.03,-0.21,0.02,0,-0.19,0.02,0,-0.21,0.02,0.03,-0.21,0.02,0,-0.21,0.02,0.05,-0.21,0.03,0.03,-0.21,0.03,0.03,-0.13,0.03,0,-0.14,0.03,0.03,-0.21,0.03,0,-0.14,0.03,0,-0.19,0.03,0.06,-0.14,0.03,0.03,-0.13,0.03,0.03,-0.21,0.03,0.06,-0.14,0.03,0.03,-0.21,0.03,0.06,-0.19,0.02,0.06,-0.19,0.02,0.06,-0.14,0.03,0.06,-0.14,0.02,0.06,-0.19,0.03,0.06,-0.14,0.03,0.06,-0.19,0.02,0,-0.19,0.02,0.03,-0.21,0.03,0.03,-0.21,0.02,0,-0.19,0.03,0.03,-0.21,0.03,0,-0.19,0.02,0,-0.14,0.02,0,-0.19,0.03,0,-0.19,0.02,0,-0.14,0.03,0,-0.19,0.03,0,-0.14,0.02,0.06,-0.14,0.02,0.03,-0.13,0.03,0.03,-0.13,0.02,0.06,-0.14,0.03,0.03,-0.13,0.03,0.06,-0.14,-0.02,0.01,-0.04,-0.02,0.02,0.01,-0.02,0.05,0.02,-0.02,0.01,-0.04,-0.02,0.05,0.02,-0.02,0.05,-0.05,-0.01,-0.05,-0.02,-0.02,-0.02,0.04,-0.02,0.02,0.01,-0.01,-0.05,-0.02,-0.02,0.02,0.01,-0.02,0.01,-0.04,-0.03,0.07,-0.05,-0.03,0.07,-0.07,-0.03,0.05,-0.07,-0.03,0.07,-0.05,-0.03,0.05,-0.07,-0.02,0.05,-0.05,-0.02,0.05,0.02,-0.03,0.07,0.02,-0.03,0.07,-0.05,-0.02,0.05,0.02,-0.03,0.07,-0.05,-0.02,0.05,-0.05,-0.03,0.07,0.02,-0.03,0.07,0.06,-0.02,0.11,0.06,-0.03,0.07,0.02,-0.02,0.11,0.06,-0.02,0.12,0.02,-0.03,0.07,0.02,-0.02,0.12,0.02,-0.02,0.12,-0.05,-0.03,0.07,0.02,-0.02,0.12,-0.05,-0.03,0.07,-0.05,-0.02,0.12,-0.07,-0.02,0.12,-0.12,-0.03,0.07,-0.12,-0.02,0.12,-0.07,-0.03,0.07,-0.12,-0.03,0.07,-0.07,-0.02,0.12,-0.05,-0.02,0.12,-0.07,-0.03,0.07,-0.07,-0.02,0.12,-0.05,-0.03,0.07,-0.07,-0.03,0.07,-0.05,-0.02,0.12,-0.12,-0.02,0.12,-0.21,-0.03,0.07,-0.21,-0.02,0.12,-0.12,-0.03,0.07,-0.21,-0.03,0.07,-0.12,-0.03,0.07,-0.07,-0.03,0.07,-0.12,-0.03,0.05,-0.12,-0.03,0.07,-0.07,-0.03,0.05,-0.12,-0.03,0.05,-0.07,-0.03,0.03,-0.21,-0.04,0.03,-0.21,-0.04,0.06,-0.19,-0.03,0.03,-0.21,-0.04,0.06,-0.19,-0.03,0.06,-0.19,-0.03,0.03,-0.13,-0.04,0.03,-0.13,-0.04,0,-0.14,-0.03,0.03,-0.13,-0.04,0,-0.14,-0.03,0,-0.14,-0.03,0.05,-0.12,-0.01,-0.01,-0.12,-0.03,0.01,-0.07,-0.03,0.05,-0.12,-0.03,0.01,-0.07,-0.03,0.05,-0.07,-0.02,0.12,-0.21,-0.02,0.1,-0.23,-0.02,0.08,-0.23,-0.02,0.12,-0.21,-0.02,0.08,-0.23,-0.03,0.07,-0.21,-0.02,0.1,-0.23,-0.02,0.1,-0.3,-0.02,0.08,-0.3,-0.02,0.1,-0.23,-0.02,0.08,-0.3,-0.02,0.08,-0.23,-0.03,0.07,0.06,-0.03,0.1,0.09,-0.02,0.11,0.06,-0.02,0.05,0.02,-0.01,0.05,0.04,-0.03,0.07,0.06,-0.02,0.05,0.02,-0.03,0.07,0.06,-0.03,0.07,0.02,-0.03,0,-0.21,-0.01,-0.01,-0.15,-0.01,-0.01,-0.12,-0.03,0.12,0.09,-0.02,0.15,0.08,-0.03,0.12,0.06,-0.03,0.1,0.09,-0.03,0.12,0.09,-0.03,0.12,0.06,-0.03,0.1,0.09,-0.03,0.12,0.06,-0.02,0.11,0.06,-0.02,0.15,0.08,-0.02,0.16,0.05,-0.03,0.12,0.06,-0.02,0.16,-0.01,-0.02,0.15,-0.01,-0.02,0.13,-0.01,-0.02,0.16,-0.01,-0.02,0.13,-0.01,-0.03,0.12,-0.01,-0.02,0.16,0.05,-0.02,0.16,-0.01,-0.03,0.12,-0.01,-0.02,0.16,0.05,-0.03,0.12,-0.01,-0.03,0.12,0.06,-0.02,0.15,-0.01,-0.02,0.15,-0.09,-0.02,0.14,-0.09,-0.02,0.15,-0.01,-0.02,0.14,-0.09,-0.02,0.13,-0.01,-0.03,0.06,-0.14,-0.03,0.07,-0.12,-0.03,0.07,-0.21,-0.03,0.06,-0.14,-0.03,0.07,-0.21,-0.03,0.06,-0.19,-0.03,0.03,-0.13,-0.03,0.05,-0.12,-0.03,0.07,-0.12,-0.03,0.03,-0.13,-0.03,0.07,-0.12,-0.03,0.06,-0.14,-0.03,0.06,-0.19,-0.03,0.07,-0.21,-0.03,0.05,-0.21,-0.03,0.06,-0.19,-0.03,0.05,-0.21,-0.03,0.03,-0.21,-0.03,0,-0.19,-0.03,0,-0.21,-0.01,-0.01,-0.12,-0.03,0,-0.19,-0.01,-0.01,-0.12,-0.03,0,-0.14,-0.03,0,-0.14,-0.01,-0.01,-0.12,-0.03,0.05,-0.12,-0.03,0,-0.14,-0.03,0.05,-0.12,-0.03,0.03,-0.13,-0.03,0.03,-0.21,-0.03,0.05,-0.21,-0.03,0,-0.21,-0.03,0.03,-0.21,-0.03,0,-0.21,-0.03,0,-0.19,-0.04,0.03,-0.21,-0.04,0,-0.19,-0.04,0,-0.14,-0.04,0.03,-0.21,-0.04,0,-0.14,-0.04,0.03,-0.13,-0.04,0.06,-0.14,-0.04,0.06,-0.19,-0.04,0.03,-0.21,-0.04,0.06,-0.14,-0.04,0.03,-0.21,-0.04,0.03,-0.13,-0.03,0.06,-0.19,-0.04,0.06,-0.19,-0.04,0.06,-0.14,-0.03,0.06,-0.19,-0.04,0.06,-0.14,-0.03,0.06,-0.14,-0.03,0,-0.19,-0.04,0,-0.19,-0.04,0.03,-0.21,-0.03,0,-0.19,-0.04,0.03,-0.21,-0.03,0.03,-0.21,-0.03,0,-0.14,-0.04,0,-0.14,-0.04,0,-0.19,-0.03,0,-0.14,-0.04,0,-0.19,-0.03,0,-0.19,-0.03,0.06,-0.14,-0.04,0.06,-0.14,-0.04,0.03,-0.13,-0.03,0.06,-0.14,-0.04,0.03,-0.13,-0.03,0.03,-0.13], uv});

        //     this.WebXR.instance({t: this.textures[1]}, 'WallLow');
        //     this.WebXR.instance({z: -2, t: this.textures[1]}, 'WallLow');
        //     this.WebXR.instance({z: -4, t: this.textures[1]}, 'WallLow');
        //     this.WebXR.instance({z: -6, t: this.textures[1]}, 'WallLow');
        //     this.WebXR.instance({z: -8, t: this.textures[1]}, 'WallLow');

        //     this.WebXR.instance({t: this.textures[0]}, 'WallTop');
        //     this.WebXR.instance({z: -2, t: this.textures[0]}, 'WallTop');
        //     this.WebXR.instance({z: -4, t: this.textures[0]}, 'WallTop');
        //     this.WebXR.instance({z: -6, t: this.textures[0]}, 'WallTop');
        //     this.WebXR.instance({z: -8, t: this.textures[0]}, 'WallTop');

        //     this.WebXR.instance({t: this.textures[2]}, 'Floor');
        //     this.WebXR.instance({z: -2, t: this.textures[2]}, 'Floor');
        //     this.WebXR.instance({z: -4, t: this.textures[2]}, 'Floor');
        //     this.WebXR.instance({z: -6, t: this.textures[2]}, 'Floor');
        //     this.WebXR.instance({z: -8, t: this.textures[2]}, 'Floor');

        //     this.WebXR.instance({t: this.textures[1], b: 'EEE'}, 'Ceiling');
        //     this.WebXR.instance({z: -2, t: this.textures[1], b: 'EEE'}, 'Ceiling');
        //     this.WebXR.instance({z: -4, t: this.textures[1], b: 'EEE'}, 'Ceiling');
        //     this.WebXR.instance({z: -6, t: this.textures[1], b: 'EEE'}, 'Ceiling');
        //     this.WebXR.instance({z: -8, t: this.textures[1], b: 'EEE'}, 'Ceiling');

        //     //this.WebXR.instance({g: 'LH', w: 0.1, h: 0.1, d: 0.1, b: '#ff0'}, 'cube');
        //     //this.WebXR.instance({g: 'RH', rx: -45, t: this.textures[6]}, 'Gun');
        //     this.WebXR.instance({g: 'RH', t: this.textures[6]}, 'Gun');

        //     this.ghosts.push(this.WebXR.instance({z: -4, x: -0.2, y: 1.4, w: 0.75, h: 1, t: this.textures[5]}, 'plane'));
        //     this.ghosts.push(this.WebXR.instance({z: -2, x: 0.2, y: 1.4, w: 0.75, h: 1, t: this.textures[5]}, 'plane'));

        //     this.WebXR.callback = this.update.bind(this);
        //     this.WebXR.sessionRequested = this.startVR.bind(this);
        //     this.WebXR.light({x: 0, y: 1.75, z: -2, b: '44F'});
        //     // this.WebXR.instance({rx: 90, z: 1, t: this.textures[1]}, 'wall');
        //     // this.WebXR.instance({z: 2, w: 0.5, h: 0.5, b: '#227'}, 'cube');
        //     //this.WebXR.instance({b: '#747'}, 'testPlane');
        //     // this.WebXR.instance({x: -1, b: '#f0f'}, 'cube');
        //     // this.WebXR.instance({x: 2.5, w: 2, b: '#00f', t: this.texture, mix: 0.5}, 'cube');
        // }
    }

    async createScene() {
        this.sce = new Scene(this.eng);

        const m = new Mesh('m', this.sce);
        let vertexData = new VertexData();
        vertexData.positions = this.floorData.vertices;
        vertexData.uvs = this.floorData.uv;
        vertexData.applyToMesh(m);
        // m.setVerticesData(VertexBuffer.PositionKind, this.floorData.vertices, false);
        // m.setVerticesData(VertexBuffer.UVKind, this.floorData.uv, false);
        m.position.y = -1;
        const texture = Texture.LoadFromDataString(
            't0',
            this.tData[0],
            this.sce,
            false,
            false,
            false,
            Texture.NEAREST_SAMPLINGMODE
        );
        let spriteMat = new StandardMaterial('spriteMat', this.sce);
        spriteMat.diffuseTexture = texture;
        m.material = spriteMat;

        this.sce.createDefaultLight(true);
        //this.sce.clearColor = Color4.FromHexString('#040010');
        const xrHelper = await this.sce.createDefaultXRExperienceAsync({
            disableNearInteraction: true,
            disablePointerSelection: true,
            disableTeleportation: true,
            disableHandTracking: true,
            inputOptions: {
                doNotLoadControllerMeshes: true,
            },
        });
        xrHelper.baseExperience.onStateChangedObservable.add((state) => {
            switch (state) {
                case WebXRState.IN_XR:
                    this.camera = xrHelper.baseExperience.camera.leftCamera!;
                    break;
                case BABYLON.WebXRState.NOT_IN_XR:
                    break;
                case BABYLON.WebXRState.EXITING_XR:
                case BABYLON.WebXRState.ENTERING_XR:
                    break;
            }
        });
    }

    t = 0;
    wasButtonPressed = false;

    update(dt: number) {
        // this.t += dt;
        // const r = this.WebXR!.next['RH'];
        // let shoot = false;
        // let gunPos: Vec3, gunDir: Vec3;
        // if (r && r.btn) {
        //     if (r.btn[0].pressed && !this.wasButtonPressed) {
        //         this.wasButtonPressed = true;
        //         shoot = true;
        //         audio.play(this.shootAudio);
        //         gunPos = new Vec3(r.x!, r.y!, r.z!);
        //         gunDir = new Vec3(r.fwd![0], r.fwd![1], r.fwd![2]);
        //         const laser = Vec3.moveForward(gunPos, gunDir, 1.8);
        //         const l = this.WebXR.instance(
        //             {
        //                 x: laser.x!,
        //                 y: laser.y! + 0.1,
        //                 z: laser.z!,
        //                 rx: r.rx,
        //                 ry: r.ry,
        //                 rz: r.rz,
        //                 w: 0.01,
        //                 h: 0.01,
        //                 d: 3,
        //                 b: '#f00',
        //             },
        //             'cube'
        //         );
        //         this.WebXR.delete(l.n!, 50);
        //     } else if (!r.btn[0].pressed && this.wasButtonPressed) {
        //         this.wasButtonPressed = false;
        //     }
        // }
        // const hitGhosts: {name: string; d: number}[] = [];
        // for (let i = 0; i < this.ghosts.length; i++) {
        //     this.WebXR.setState({n: this.ghosts[i].n, y: Math.sin(this.t / 200 + i) / 6 + 1.5});
        //     if (shoot) {
        //         const name: string = this.ghosts[i].n!;
        //         const d = Vec3.rayPlaneIntersection(
        //             gunPos!,
        //             gunDir!,
        //             new Vec3(this.WebXR.next[name].x!, this.WebXR.next[name].y!, this.WebXR.next[name].z!),
        //             new Vec3(0, 0, 1),
        //             1
        //         );
        //         // a ghost was hit when d > 0
        //         if (~d) {
        //             hitGhosts.push({name, d});
        //         }
        // //     }
        // }
        // if (hitGhosts.length > 0) {
        //     hitGhosts.sort((a, b) => a.d - b.d);
        //     this.WebXR.delete(hitGhosts[0].name);
        //     this.ghosts = this.ghosts.filter((g) => g.n !== hitGhosts[0].name);
        // }
    }

    startVR() {
        audio.init();
        this.shootAudio = audio.createSound(135, this.gun);
    }

    shoot = [
        7, // osc1_oct
        0, // osc1_det
        0, // osc1_detune
        0, // osc1_xenv
        255, // osc1_vol
        0, // osc1_waveform
        7, // osc2_oct
        0, // osc2_det
        0, // osc2_detune
        1, // osc2_xenv
        255, // osc2_vol
        0, // osc2_waveform
        0, // noise_fader
        789, // env_attack
        0, // env_sustain
        20000, // env_release
        255, // env_master
        3, // fx_filter
        2394, // fx_freq
        35, // fx_resonance
        0, // fx_delay_time
        0, // fx_delay_amt
        0, // fx_pan_freq
        0, // fx_pan_amt
        1, // lfo_osc1_freq
        1, // lfo_fx_freq
        1, // lfo_freq
        36, // lfo_amt
        3, // lfo_waveform
    ];

    gun = [
        7, // osc1_oct
        3, // osc1_det
        0, // osc1_detune
        1, // osc1_xenv
        255, // osc1_vol
        1, // osc1_waveform
        6, // osc2_oct
        0, // osc2_det
        0, // osc2_detune
        1, // osc2_xenv
        255, // osc2_vol
        1, // osc2_waveform
        112, // noise_fader
        548, // env_attack
        1979, // env_sustain
        11601, // env_release
        255, // env_master
        2, // fx_filter
        2902, // fx_freq
        176, // fx_resonance
        2, // fx_delay_time
        77, // fx_delay_amt
        0, // fx_pan_freq
        0, // fx_pan_amt
        1, // lfo_osc1_freq
        0, // lfo_fx_freq
        10, // lfo_freq
        255, // lfo_amt
        1, // lfo_waveform
    ];
}
